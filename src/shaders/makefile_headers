#
# Copyright 2014-2015 Dario Manesku. All rights reserved.
# License: http://www.opensource.org/licenses/BSD-2-Clause
#

BGFX_DIR=../../../bgfx
RUNTIME_DIR=../../runtime
BUILD_DIR=../../_build
SCRIPT_DIR=$(BGFX_DIR)/scripts

THISDIR:=$(SCRIPT_DIR)
include $(THISDIR)/tools.mk

VS_FLAGS+=-i $(THISDIR)../src/ --type vertex
FS_FLAGS+=-i $(THISDIR)../src/ --type fragment

VS_SOURCES=$(wildcard vs_*.sc)
FS_SOURCES=$(wildcard fs_*.sc)

VS_BIN = $(addsuffix .bin.h, $(notdir $(basename $(VS_SOURCES))))
FS_BIN = $(addsuffix .bin.h, $(notdir $(basename $(FS_SOURCES))))

DEST_DIR = /headers/

BIN = $(VS_BIN) $(FS_BIN)

SHADER_TMP = .tmp_shader

vs_%.bin.h : vs_%.sc
	$(SILENT) echo [$(<)]
	$(SILENT) $(SHADERC) $(VS_FLAGS)  --platform linux   -p 120         -f $(<) -o $(SHADER_TMP) --bin2c $(basename $(<F))_glsl
	$(SILENT) cat $(SHADER_TMP) > $(addsuffix $(@F), $(addsuffix $(DEST_DIR), $(@D)))
	-$(SILENT) $(SHADERC) $(VS_FLAGS) --platform windows -p vs_3_0 -O 3 -f $(<) -o $(SHADER_TMP) --bin2c $(basename $(<F))_dx9
	-$(SILENT) cat $(SHADER_TMP) >> $(addsuffix $(@F), $(addsuffix $(DEST_DIR), $(@D)))
	-$(SILENT) $(SHADERC) $(VS_FLAGS) --platform windows -p vs_4_0 -O 3 -f $(<) -o $(SHADER_TMP) --bin2c $(basename $(<F))_dx11
	-$(SILENT) cat $(SHADER_TMP) >> $(addsuffix $(@F), $(addsuffix $(DEST_DIR), $(@D)))

fs_%.bin.h : fs_%.sc
	$(SILENT) echo [$(<)]
	$(SILENT) $(SHADERC) $(FS_FLAGS)  --platform linux   -p 120         -f $(<) -o $(SHADER_TMP) --bin2c $(basename $(<F))_glsl
	$(SILENT) cat $(SHADER_TMP) > $(addsuffix $(@F), $(addsuffix $(DEST_DIR), $(@D)))
	-$(SILENT) $(SHADERC) $(FS_FLAGS) --platform windows -p ps_3_0 -O 3 -f $(<) -o $(SHADER_TMP) --bin2c $(basename $(<F))_dx9
	-$(SILENT) cat $(SHADER_TMP) >> $(addsuffix $(@F), $(addsuffix $(DEST_DIR), $(@D)))
	-$(SILENT) $(SHADERC) $(FS_FLAGS) --platform windows -p ps_4_0 -O 3 -f $(<) -o $(SHADER_TMP) --bin2c $(basename $(<F))_dx11
	-$(SILENT) cat $(SHADER_TMP) >> $(addsuffix $(@F), $(addsuffix $(DEST_DIR), $(@D)))

.PHONY: all
all: $(BIN)
	$(SILENT) rm $(SHADER_TMP)

.PHONY: generate
generate:
	$(SILENT) sh gen_headers.sh

.PHONY: clean
clean:
	@echo Cleaning...
	@-rm -vf $(BIN)

.PHONY: rebuild
rebuild: all clean

rebuild:
	@make -s --no-print-directory clean all
